- name: Install stuff into wsl
  hosts: localhost
  vars:
    the_user: "{{ ansible_user_id }}"
    ansible_sudo_pass: "%Chainer%927"
    pycurrent: "3.13.0"
    vagrant: false
    python: true

  tasks:

    - import_tasks: ../../linux/includes/sudo.yaml

    - name: Install utilities
      become: yes
      apt:
        update_cache: true
        pkg:
          - aptitude
          - bat
          - direnv
          - duf
          - hexyl
          - libssl-dev
          - mc
          - ncdu
          - python3-virtualenv
          - silversearcher-ag
          - skopeo
          - zlib1g-dev
          - zsh

    - name: Vagrant
      when: vagrant
      block:

      - name: Add vagrant gpg key
        become: yes
        apt_key:
          url: https://apt.releases.hashicorp.com/gpg
          state: present

      - name: Add vagrant repo
        become: yes
        apt_repository:
          repo: "deb https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"

      - name: Install vagrant
        become: yes
        apt:
          update_cache: true
          pkg:
            - vagrant

      - name: Connect WSL Vagrant to Windows Vagrant
        lineinfile:
          path: ~/.zshrc
          create: no
          line: "{{ item }}"
        loop:
          - export VAGRANT_WSL_ENABLE_WINDOWS_ACCESS="1"
          - export VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH="/mnt/c/Users/{{ the_user }}/"
          - export PATH=$PATH:"/mnt/c/Program Files/Oracle/VirtualBox"
          - export PATH=$PATH:"/mnt/c/Windows/System32/WindowsPowerShell/v1.0"

    - name: Change user shell to zsh 
      become: yes
      user:
        name: "{{ the_user }}"
        shell: /bin/zsh

    - name: Download oh-my-zsh
      get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/oh-my-zsh.sh
        mode: '0777'

    - name: Install oh-my-zsh
      command:
        cmd: /tmp/oh-my-zsh.sh
        creates: ~/.oh-my-zsh

    - name: Add connection to my updates
      lineinfile:
        path: ~/.zshrc
        create: no
        line: "{{ item }}"
        insertbefore: "^source.*oh-my-zsh.sh$"
      loop:
        - ZSH_THEME="bowser"
        - ZSH_CUSTOM=~/Projects/SharedEnvironment/zsh
        - plugins=(virtualenv)
        - source $ZSH_CUSTOM/zshrc

    - name: Python and PyEnv
      when: python
      block:

      - name: Check for repo existing
        stat: 
          path: ~/.pyenv/.git
        register: pyenv

      - when: not pyenv.stat.exists
        block:

        - name: Fetch pyenv
          ansible.builtin.uri:
            url: https://pyenv.run
            return_content: yes
          register: pyenv_installer

        - name: Run pyenv installer
          ansible.builtin.shell:
            cmd: sh -s -- -y
            stdin: "{{ pyenv_installer.content }}"

      - name: Path pyenv
        lineinfile:
          path: ~/.zshrc
          create: no
          line: "export PATH=$PATH:~/.pyenv/bin"

      - name: Install python
        command:
          cmd: ~/.pyenv/bin/pyenv install {{ pycurrent }}
          creates: ~/.pyenv/versions/{{ pycurrent }}/bin/python

      - name: Create python virtual environment
        pip:
          name: pip
          virtualenv: "~/.local/PVE/Py{{ pycurrent }}"
          virtualenv_command: "virtualenv -p ~/.pyenv/versions/{{ pycurrent }}/bin/python"

      - name: Symlink PyCurrent
        file:
          src: "~/.local/PVE/Py{{ pycurrent }}"
          dest: "~/.local/PVE/PyCurrent"
          state: link

    - name: Create configuration directories
      file:
        path: ~/.config/direnv
        state: directory
        
    - name: Create symlinks into the shared environment
      file:
        dest: "{{item.key}}"
        src: "~/Projects/SharedEnvironment/{{item.value}}"
        state: link
      loop:
        "{{ links | dict2items }}"
      vars:
        links:
          ~/.tmux.conf: 
            tmux/tmux.conf
          ~/.config/flake8: 
            python/flake8
          ~/.config/direnv/direnvrc: 
            direnvrc
          ~/.latexmkrc: 
            latex/latexmkrc
        

# Path Powershell
# c:\Users\rcrosby\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Windows PowerShell
# %SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe

# export VAGRANT_WSL_ENABLE_WINDOWS_ACCESS="1"
# export VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH="/mnt/c/Users/username/"
# export PATH="$PATH:/mnt/d/Programs/Virtualbox"

# wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
# echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
# sudo apt update && sudo apt install vagrant
